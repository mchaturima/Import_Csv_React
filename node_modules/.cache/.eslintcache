[{"/home/user/Documents/REACT/importing-csv/src/index.js":"1","/home/user/Documents/REACT/importing-csv/src/App.js":"2","/home/user/Documents/REACT/importing-csv/src/components/ImportCsv.js":"3","/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js":"4"},{"size":198,"mtime":1612886505894,"results":"5","hashOfConfig":"6"},{"size":435,"mtime":1612981045978,"results":"7","hashOfConfig":"6"},{"size":1509,"mtime":1613107217015,"results":"8","hashOfConfig":"6"},{"size":1574,"mtime":1613107183598,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1uo06jp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/user/Documents/REACT/importing-csv/src/index.js",[],["20","21"],"/home/user/Documents/REACT/importing-csv/src/App.js",[],"/home/user/Documents/REACT/importing-csv/src/components/ImportCsv.js",["22","23","24"],"/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js",["25","26"],"import React, { useEffect, useState } from 'react';\nimport {Table} from 'react-bootstrap';\n\nfunction ExtractCsvTable(items) {\n    let data = items.tableData ? items.tableData: [];\n    let column = [];\n    if(data.length > 0){\n        column = Object.keys(data[0])\n    }\n    function checkMandatoryFields(item) {\n        if(item === \"null\" || item === \"Invalid\"){\n            return \"Invalid\"\n        }else{\n            return item;\n        }\n    }\n\n    return (\n        <>\n          <Table striped bordered hover style={table}>\n              <thead>\n                  <tr>\n                {column.map((item,index)=>{\n                    return(\n                        <th key={index} className=\"table-headers\">{item.split('_').join(\" \")}</th>\n                    )\n                })}\n                </tr>\n              </thead>\n              <tbody>\n         {data.map((item,index)=>{\n              return ( \n                <tr key={index}>\n                <td key={index+\"-username\"} className=\"username\">{checkMandatoryFields(item.username ? item.username : \"Invalid\")}</td>\n                <td key={index+\"-fname\"}>{item.first_name}</td>\n                <td key={index+\"-lname\"}>{item.last_name}</td>\n                <td key={index+\"-email\"} className=\"\">{checkMandatoryFields(item.email)}</td>\n                <td key={index+\"-phone\"} className=\"unique-fields\">{item.phone}</td>\n                </tr>\n              )\n            })}\n            </tbody>\n            </Table>\n        </>\n    )\n}\n\nvar table = {\n    \"margin\" : \"10px\"\n}\n\nexport default ExtractCsvTable\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},{"ruleId":"31","severity":1,"message":"35","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},{"ruleId":"36","severity":1,"message":"37","line":32,"column":16,"nodeType":"38","messageId":"39","endLine":32,"endColumn":25},{"ruleId":"31","severity":1,"message":"35","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":26},{"ruleId":"31","severity":1,"message":"32","line":1,"column":28,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.some() expects a return value from function.","FunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]