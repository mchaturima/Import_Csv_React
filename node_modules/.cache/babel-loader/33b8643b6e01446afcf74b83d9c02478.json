{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExtractCsvTable(items) {\n  // console.log(items.tableData)\n  let data = items.tableData ? items.tableData : [];\n  let column = [];\n\n  if (data.length > 0) {\n    column = Object.keys(data[0]);\n  }\n\n  function checkMandatoryFields(item) {\n    if (item === \"\" || item === null) {\n      return \"Invalid\";\n    } else {\n      return item;\n    }\n  }\n\n  function checkUniqueFields(item) {// console.log(item)\n  }\n\n  function cellContent(item) {\n    var content = document.getElementsByTagName('td');\n\n    for (let i in content) {\n      if (content[i].innerHTML === item) {\n        return \"Invalid\";\n      }\n    }\n  }\n\n  cellContent();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: column.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"unique-fileds\",\n              children: checkMandatoryFields(item.username)\n            }, index + \"-username\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.first_name\n            }, index + \"-fname\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.last_name\n            }, index + \"-lname\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"unique-fileds\",\n              children: checkMandatoryFields(item.email)\n            }, index + \"-email\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"unique-fileds\",\n              children: checkUniqueFields(item.phone)\n            }, index + \"-phone\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_c = ExtractCsvTable;\nexport default ExtractCsvTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtractCsvTable\");","map":{"version":3,"sources":["/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js"],"names":["React","Table","ExtractCsvTable","items","data","tableData","column","length","Object","keys","checkMandatoryFields","item","checkUniqueFields","cellContent","content","document","getElementsByTagName","i","innerHTML","map","index","username","first_name","last_name","email","phone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B;AACA,MAAIC,IAAI,GAAGD,KAAK,CAACE,SAAN,GAAkBF,KAAK,CAACE,SAAxB,GAAmC,EAA9C;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAGF,IAAI,CAACG,MAAL,GAAc,CAAjB,EAAmB;AACfD,IAAAA,MAAM,GAAGE,MAAM,CAACC,IAAP,CAAYL,IAAI,CAAC,CAAD,CAAhB,CAAT;AACH;;AAED,WAASM,oBAAT,CAA8BC,IAA9B,EAAoC;AAChC,QAAGA,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,IAA3B,EAAgC;AAC5B,aAAO,SAAP;AACH,KAFD,MAEK;AACD,aAAOA,IAAP;AACH;AACJ;;AAED,WAASC,iBAAT,CAA2BD,IAA3B,EAAiC,CAC7B;AACH;;AAED,WAASE,WAAT,CAAqBF,IAArB,EAA2B;AACvB,QAAIG,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,IAA9B,CAAd;;AACA,SAAI,IAAIC,CAAR,IAAaH,OAAb,EAAqB;AACjB,UAAGA,OAAO,CAACG,CAAD,CAAP,CAAWC,SAAX,KAAyBP,IAA5B,EAAiC;AAC7B,eAAO,SAAP;AACH;AACJ;AACJ;;AAEEE,EAAAA,WAAW;AAEd,sBACI;AAAA,2BACE;AAAA,8BACI;AAAA,+BACI;AAAA,oBACDP,MAAM,CAACa,GAAP,CAAW,CAACR,IAAD,EAAMS,KAAN,KAAc;AACtB,gCACI;AAAA,wBAAiBT;AAAjB,eAASS,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA;AADC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBACJhB,IAAI,CAACe,GAAL,CAAS,CAACR,IAAD,EAAMS,KAAN,KAAc;AACnB,8BACE;AAAA,oCACA;AAA4B,cAAA,SAAS,EAAC,eAAtC;AAAA,wBAAuDV,oBAAoB,CAACC,IAAI,CAACU,QAAN;AAA3E,eAASD,KAAK,GAAC,WAAf;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAA0BT,IAAI,CAACW;AAA/B,eAASF,KAAK,GAAC,QAAf;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAA0BT,IAAI,CAACY;AAA/B,eAASH,KAAK,GAAC,QAAf;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAyB,cAAA,SAAS,EAAC,eAAnC;AAAA,wBAAoDV,oBAAoB,CAACC,IAAI,CAACa,KAAN;AAAxE,eAASJ,KAAK,GAAC,QAAf;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAyB,cAAA,SAAS,EAAC,eAAnC;AAAA,wBAAoDR,iBAAiB,CAACD,IAAI,CAACc,KAAN;AAArE,eAASL,KAAK,GAAC,QAAf;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVH;AADI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AA4BH;;KA3DQlB,e;AA6DT,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport {Table} from 'react-bootstrap';\n\nfunction ExtractCsvTable(items) {\n    // console.log(items.tableData)\n    let data = items.tableData ? items.tableData: [];\n    let column = [];\n    if(data.length > 0){\n        column = Object.keys(data[0])\n    }\n\n    function checkMandatoryFields(item) {\n        if(item === \"\" || item === null){\n            return \"Invalid\"\n        }else{\n            return item;\n        }\n    }\n\n    function checkUniqueFields(item) {\n        // console.log(item)\n    }\n\n    function cellContent(item) {\n        var content = document.getElementsByTagName('td');\n        for(let i in content){\n            if(content[i].innerHTML === item){\n                return \"Invalid\";\n            }\n        }\n    }\n      \n       cellContent();\n    \n    return (\n        <>\n          <table>\n              <thead>\n                  <tr>\n                {column.map((item,index)=>{\n                    return(\n                        <th key={index}>{item}</th>\n                    )\n                })}\n                </tr>\n              </thead>\n              <tbody>\n         {data.map((item,index)=>{\n              return ( \n                <tr key={index}>\n                <td key={index+\"-username\"} className=\"unique-fileds\">{checkMandatoryFields(item.username)}</td>\n                <td key={index+\"-fname\"}>{item.first_name}</td>\n                <td key={index+\"-lname\"}>{item.last_name}</td>\n                <td key={index+\"-email\"} className=\"unique-fileds\">{checkMandatoryFields(item.email)}</td>\n                <td key={index+\"-phone\"} className=\"unique-fileds\">{checkUniqueFields(item.phone)}</td>\n                </tr>\n              )\n            })}\n            </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default ExtractCsvTable\n"]},"metadata":{},"sourceType":"module"}