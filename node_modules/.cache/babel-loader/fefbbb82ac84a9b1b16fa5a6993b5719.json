{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExtractCsvTable(items) {\n  console.log(items.tableData);\n  let data = items.tableData ? items.tableData : [];\n  let column;\n\n  if (data.length > 0) {\n    column = Object.keys(data[0]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: column.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this), data.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_c = ExtractCsvTable;\nexport default ExtractCsvTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtractCsvTable\");","map":{"version":3,"sources":["/home/user/Documents/REACT/importing-csv/src/components/ExtractCsvTable.js"],"names":["React","ExtractCsvTable","items","console","log","tableData","data","column","length","Object","keys","map","item","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,MAAIC,IAAI,GAAGJ,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAmC,EAA9C;AACA,MAAIE,MAAJ;;AACA,MAAGD,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAmB;AACfD,IAAAA,MAAM,GAAGE,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAAC,CAAD,CAAhB,CAAT;AACH;;AAED,sBACI;AAAA,2BACE;AAAA,8BACI;AAAA,kBACGC,MAAM,CAACI,GAAP,CAAYC,IAAD,IAAQ;AAChB,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cADJ,EAQAN,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAQ;AACb,4BAGQ;AAAA,iCACtB;AAAA,sBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA;AADsB;AAAA;AAAA;AAAA;AAAA,gBAHR;AAUD,OAXH,CARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAyBH;;KAjCQZ,e;AAmCT,eAAeA,eAAf","sourcesContent":["import React from 'react'\n\nfunction ExtractCsvTable(items) {\n    console.log(items.tableData)\n    let data = items.tableData ? items.tableData: [];\n    let column;\n    if(data.length > 0){\n        column = Object.keys(data[0])\n    }\n    \n    return (\n        <>\n          <table>\n              <thead>\n                {column.map((item)=>{\n                    return(\n                        <th>item</th>\n                    )\n                })}\n              </thead>\n         {data.map((item)=>{\n              return ( \n                \n                      \n                      <tbody>\n<div>{item.username}</div>\n                      </tbody>\n                  \n              \n              )\n              \n            })}\n            </table>\n        </>\n    )\n}\n\nexport default ExtractCsvTable\n"]},"metadata":{},"sourceType":"module"}